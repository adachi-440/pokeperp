export const OrderBookMVPAbi = [
  {
    type: "constructor",
    inputs: [
      { name: "_minQty", type: "uint256", internalType: "uint256" },
      { name: "_minNotional", type: "uint256", internalType: "uint256" },
      { name: "_deviationLimit", type: "uint256", internalType: "uint256" },
      { name: "_oracleAdapter", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "bestAskPrice",
    inputs: [],
    outputs: [{ name: "", type: "int24", internalType: "int24" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "bestBidPrice",
    inputs: [],
    outputs: [{ name: "", type: "int24", internalType: "int24" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getOpenOrders",
    inputs: [{ name: "trader", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bytes32[]", internalType: "bytes32[]" }],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "levelOf",
    inputs: [
      { name: "isBid", type: "bool", internalType: "bool" },
      { name: "price", type: "int24", internalType: "int24" },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IOrderBook.Level",
        components: [
          { name: "totalQty", type: "uint256", internalType: "uint256" },
          { name: "headId", type: "bytes32", internalType: "bytes32" },
          { name: "tailId", type: "bytes32", internalType: "bytes32" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "marketCfg",
    inputs: [],
    outputs: [
      { name: "minQty", type: "uint256", internalType: "uint256" },
      { name: "minNotional", type: "uint256", internalType: "uint256" },
      { name: "deviationLimit", type: "uint256", internalType: "uint256" },
      { name: "oracleAdapter", type: "address", internalType: "address" },
      { name: "settlementHook", type: "address", internalType: "address" },
      { name: "paused", type: "bool", internalType: "bool" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "matchAtBest",
    inputs: [{ name: "stepsMax", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "matched", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "orderOf",
    inputs: [{ name: "orderId", type: "bytes32", internalType: "bytes32" }],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IOrderBook.Order",
        components: [
          { name: "id", type: "bytes32", internalType: "bytes32" },
          { name: "trader", type: "address", internalType: "address" },
          { name: "isBid", type: "bool", internalType: "bool" },
          { name: "price", type: "int24", internalType: "int24" },
          { name: "qty", type: "uint256", internalType: "uint256" },
          { name: "timestamp", type: "uint256", internalType: "uint256" },
          { name: "nextId", type: "bytes32", internalType: "bytes32" },
          { name: "prevId", type: "bytes32", internalType: "bytes32" },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "place",
    inputs: [
      { name: "isBid", type: "bool", internalType: "bool" },
      { name: "price", type: "int24", internalType: "int24" },
      { name: "qty", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "orderId", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSettlementHook",
    inputs: [{ name: "_settlementHook", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OrderPlaced",
    inputs: [
      { name: "orderId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "trader", type: "address", indexed: true, internalType: "address" },
      { name: "isBid", type: "bool", indexed: false, internalType: "bool" },
      { name: "price", type: "int24", indexed: false, internalType: "int24" },
      { name: "qty", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "timestamp", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TradeMatched",
    inputs: [
      { name: "buyOrderId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "sellOrderId", type: "bytes32", indexed: true, internalType: "bytes32" },
      { name: "buyer", type: "address", indexed: false, internalType: "address" },
      { name: "seller", type: "address", indexed: false, internalType: "address" },
      { name: "price", type: "int24", indexed: false, internalType: "int24" },
      { name: "qty", type: "uint256", indexed: false, internalType: "uint256" },
      { name: "timestamp", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
  },
] as const